/**
 * Gaming Theme Styles - KnockoutZone AppUI
 *
 * This file contains the complete design system for the gaming-themed application.
 * Built with Tailwind CSS v4 and custom CSS variables for a cohesive gaming experience.
 *
 * Structure:
 * 1. Tailwind CSS import
 * 2. CSS Variables (Light & Dark themes)
 * 3. Base layer styles
 * 4. Utility layer classes
 *
 * Color Format: All colors use HSL format for better manipulation and consistency
 * Theme Support: Full light/dark mode support with gaming-specific colors
 */

@import "tailwindcss";

/**
 * Design System CSS Variables
 *
 * All colors, gradients, effects, and design tokens are defined here.
 * This ensures consistency across the entire application and enables
 * easy theme switching and customization.
 *
 * Color Naming Convention:
 * - Standard UI colors: --background, --foreground, --primary, etc.
 * - Gaming colors: --game-success, --game-warning, --game-disabled
 * - Sidebar colors: --sidebar-background, --sidebar-primary, etc.
 *
 * All colors MUST be in HSL format for optimal color manipulation.
 */

@layer base {
  /**
   * Light Theme Variables (Default)
   *
   * Primary color scheme for the gaming interface.
   * Features dark cosmic backgrounds with bright neon accents.
   */
  :root {
    --background: 240 10% 8%;
    --foreground: 210 40% 95%;
    --card: 240 8% 12%;
    --card-foreground: 210 40% 95%;

    --popover: 240 8% 12%;
    --popover-foreground: 210 40% 95%;
    
    --primary: 210 100% 56%;
    --primary-foreground: 240 10% 8%;

    --secondary: 270 95% 65%;
    --secondary-foreground: 240 10% 8%;

    --muted: 240 8% 15%;
    --muted-foreground: 215 20% 65%;

    --accent: 270 95% 65%;
    --accent-foreground: 240 10% 8%;
    
    --destructive: 0 100% 60%;
    --destructive-foreground: 240 10% 8%;

    --border: 240 8% 20%;
    --input: 240 8% 15%;
    
    --ring: 210 100% 56%;

    --game-success: 120 100% 50%;
    --game-warning: 45 100% 55%;
    --game-disabled: 220 13% 30%;
    
    --gradient-primary: linear-gradient(135deg, hsl(210 100% 56%), hsl(195 100% 60%));
    --gradient-secondary: linear-gradient(135deg, hsl(270 95% 65%), hsl(285 95% 70%));
    --gradient-danger: linear-gradient(135deg, hsl(0 100% 60%), hsl(15 100% 65%));
    --gradient-success: linear-gradient(135deg, hsl(120 100% 50%), hsl(135 100% 55%));
    
    --glow-primary: 0 0 20px hsl(210 100% 56% / 0.5);
    --glow-secondary: 0 0 20px hsl(270 95% 65% / 0.5);
    --glow-danger: 0 0 20px hsl(0 100% 60% / 0.5);
    
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;

    --loader-primary: 224 100% 67%;
    --loader-secondary: 224 85% 53%;
    --loader-glass: 224 85% 53%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
    
    --game-success: 120 100% 50%;
    --game-warning: 45 100% 55%;
    --game-disabled: 220 13% 30%;

    /* === LOADER SPECIFIC COLORS (Dark Mode - assuming same values for now) === */
    --loader-primary: 224 100% 67%;
    --loader-secondary: 224 85% 53%;
    --loader-glass: 224 85% 53%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

@layer utilities {
  .bg-background {
    background-color: hsl(var(--background));
  }
  
  .bg-foreground {
    background-color: hsl(var(--foreground));
  }
  
  .bg-card {
    background-color: hsl(var(--card));
  }
  
  .bg-card-foreground {
    background-color: hsl(var(--card-foreground));
  }
  
  .bg-popover {
    background-color: hsl(var(--popover));
  }
  
  .bg-popover-foreground {
    background-color: hsl(var(--popover-foreground));
  }
  
  .bg-primary {
    background-color: hsl(var(--primary));
  }
  
  .bg-primary-foreground {
    background-color: hsl(var(--primary-foreground));
  }
  
  .bg-secondary {
    background-color: hsl(var(--secondary));
  }
  
  .bg-secondary-foreground {
    background-color: hsl(var(--secondary-foreground));
  }
  
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  
  .bg-muted-foreground {
    background-color: hsl(var(--muted-foreground));
  }
  
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  
  .bg-accent-foreground {
    background-color: hsl(var(--accent-foreground));
  }
  
  .bg-destructive {
    background-color: hsl(var(--destructive));
  }
  
  .bg-destructive-foreground {
    background-color: hsl(var(--destructive-foreground));
  }
  
  .bg-border {
    background-color: hsl(var(--border));
  }
  
  .bg-input {
    background-color: hsl(var(--input));
  }
  
  .bg-ring {
    background-color: hsl(var(--ring));
  }
  
  .bg-game-success {
    background-color: hsl(var(--game-success));
  }
  
  .bg-game-warning {
    background-color: hsl(var(--game-warning));
  }
  
  .bg-game-disabled {
    background-color: hsl(var(--game-disabled));
  }
  
  .bg-sidebar {
    background-color: hsl(var(--sidebar-background));
  }
  
  .bg-sidebar-foreground {
    background-color: hsl(var(--sidebar-foreground));
  }
  
  .bg-sidebar-primary {
    background-color: hsl(var(--sidebar-primary));
  }
  
  .bg-sidebar-primary-foreground {
    background-color: hsl(var(--sidebar-primary-foreground));
  }
  
  .bg-sidebar-accent {
    background-color: hsl(var(--sidebar-accent));
  }
  
  .bg-sidebar-accent-foreground {
    background-color: hsl(var(--sidebar-accent-foreground));
  }

  .bg-loader-primary {
    background-color: hsl(var(--loader-primary));
  }
  
  .bg-loader-secondary {
    background-color: hsl(var(--loader-secondary));
  }
  
  .bg-loader-glass {
    background-color: hsl(var(--loader-glass));
  }
  
  .text-background {
    color: hsl(var(--background));
  }
  
  .text-foreground {
    color: hsl(var(--foreground));
  }
  
  .text-card {
    color: hsl(var(--card));
  }
  
  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }
  
  .text-popover {
    color: hsl(var(--popover));
  }
  
  .text-popover-foreground {
    color: hsl(var(--popover-foreground));
  }
  
  .text-primary {
    color: hsl(var(--primary));
  }
  
  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }
  
  .text-secondary {
    color: hsl(var(--secondary));
  }
  
  .text-secondary-foreground {
    color: hsl(var(--secondary-foreground));
  }
  
  .text-muted {
    color: hsl(var(--muted));
  }
  
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  
  .text-accent {
    color: hsl(var(--accent));
  }
  
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }
  
  .text-destructive {
    color: hsl(var(--destructive));
  }
  
  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }
  
  .text-border {
    color: hsl(var(--border));
  }
  
  .text-input {
    color: hsl(var(--input));
  }
  
  .text-ring {
    color: hsl(var(--ring));
  }
  
  .text-game-success {
    color: hsl(var(--game-success));
  }
  
  .text-game-warning {
    color: hsl(var(--game-warning));
  }
  
  .text-game-disabled {
    color: hsl(var(--game-disabled));
  }
  
  .text-sidebar {
    color: hsl(var(--sidebar-background));
  }
  
  .text-sidebar-foreground {
    color: hsl(var(--sidebar-foreground));
  }
  
  .text-sidebar-primary {
    color: hsl(var(--sidebar-primary));
  }
  
  .text-sidebar-primary-foreground {
    color: hsl(var(--sidebar-primary-foreground));
  }
  
  .text-sidebar-accent {
    color: hsl(var(--sidebar-accent));
  }
  
  .text-sidebar-accent-foreground {
    color: hsl(var(--sidebar-accent-foreground));
  }

  .text-loader-primary {
    color: hsl(var(--loader-primary));
  }
  
  .text-loader-secondary {
    color: hsl(var(--loader-secondary));
  }
  
  .text-loader-glass {
    color: hsl(var(--loader-glass));
  }
  
  .border-background {
    border-color: hsl(var(--background));
  }
  
  .border-foreground {
    border-color: hsl(var(--foreground));
  }
  
  .border-card {
    border-color: hsl(var(--card));
  }
  
  .border-card-foreground {
    border-color: hsl(var(--card-foreground));
  }
  
  .border-popover {
    border-color: hsl(var(--popover));
  }
  
  .border-popover-foreground {
    border-color: hsl(var(--popover-foreground));
  }
  
  .border-primary {
    border-color: hsl(var(--primary));
  }
  
  .border-primary-foreground {
    border-color: hsl(var(--primary-foreground));
  }
  
  .border-secondary {
    border-color: hsl(var(--secondary));
  }
  
  .border-secondary-foreground {
    border-color: hsl(var(--secondary-foreground));
  }
  
  .border-muted {
    border-color: hsl(var(--muted));
  }
  
  .border-muted-foreground {
    border-color: hsl(var(--muted-foreground));
  }
  
  .border-accent {
    border-color: hsl(var(--accent));
  }
  
  .border-accent-foreground {
    border-color: hsl(var(--accent-foreground));
  }
  
  .border-destructive {
    border-color: hsl(var(--destructive));
  }
  
  .border-destructive-foreground {
    border-color: hsl(var(--destructive-foreground));
  }
  
  .border-border {
    border-color: hsl(var(--border));
  }
  
  .border-input {
    border-color: hsl(var(--input));
  }
  
  .border-ring {
    border-color: hsl(var(--ring));
  }
  
  .border-game-success {
    border-color: hsl(var(--game-success));
  }
  
  .border-game-warning {
    border-color: hsl(var(--game-warning));
  }
  
  .border-game-disabled {
    border-color: hsl(var(--game-disabled));
  }
  
  .border-sidebar {
    border-color: hsl(var(--sidebar-background));
  }
  
  .border-sidebar-foreground {
    border-color: hsl(var(--sidebar-foreground));
  }
  
  .border-sidebar-primary {
    border-color: hsl(var(--sidebar-primary));
  }
  
  .border-sidebar-primary-foreground {
    border-color: hsl(var(--sidebar-primary-foreground));
  }
  
  .border-sidebar-accent {
    border-color: hsl(var(--sidebar-accent));
  }
  
  .border-sidebar-accent-foreground {
    border-color: hsl(var(--sidebar-accent-foreground));
  }
  
  .border-sidebar-border {
    border-color: hsl(var(--sidebar-border));
  }
  
  .border-sidebar-ring {
    border-color: hsl(var(--sidebar-ring));
  }

  .border-loader-primary {
    border-color: hsl(var(--loader-primary));
  }
  
  .border-loader-secondary {
    border-color: hsl(var(--loader-secondary));
  }
  
  .border-loader-glass {
    border-color: hsl(var(--loader-glass));
  }
  
  .bg-gradient-primary {
    background-image: var(--gradient-primary);
  }
  
  .bg-gradient-secondary {
    background-image: var(--gradient-secondary);
  }
  
  .bg-gradient-danger {
    background-image: var(--gradient-danger);
  }
  
  .bg-gradient-success {
    background-image: var(--gradient-success);
  }
  
  .shadow-glow-primary {
    box-shadow: var(--glow-primary);
  }
  
  .shadow-glow-secondary {
    box-shadow: var(--glow-secondary);
  }
  
  .shadow-glow-danger {
    box-shadow: var(--glow-danger);
  }
  
  .transition-smooth {
    transition: var(--transition-smooth);
  }
  
  .transition-bounce {
    transition: var(--transition-bounce);
  }
  
  .rounded-radius {
    border-radius: var(--radius);
  }
}
